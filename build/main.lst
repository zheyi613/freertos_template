ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.task2.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 7461736B 		.ascii	"task1 count: %d\012\000"
  22      3120636F 
  22      756E743A 
  22      2025640A 
  22      00
  23              		.section	.text.task2,"ax",%progbits
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	task2:
  30              	.LFB142:
  31              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 2


  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "usbd_cdc_if.h"
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** #include "task.h"
  29:Core/Src/main.c **** #include "dwt_delay.h"
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** TaskHandle_t task1_handler;
  52:Core/Src/main.c **** TaskHandle_t task2_handler;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** uint8_t task1_count;
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** static void task1(void *param);
  61:Core/Src/main.c **** static void task2(void *param);
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /**
  71:Core/Src/main.c ****   * @brief  The application entry point.
  72:Core/Src/main.c ****   * @retval int
  73:Core/Src/main.c ****   */
  74:Core/Src/main.c **** int main(void)
  75:Core/Src/main.c **** {
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:Core/Src/main.c ****   BaseType_t status;
  78:Core/Src/main.c ****   /* USER CODE END 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 3


  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.c ****   HAL_Init();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:Core/Src/main.c ****   MX_GPIO_Init();
  98:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c ****   DWT_Init();
 101:Core/Src/main.c ****   HAL_Delay(100);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   task1_count = 0;
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   vSetVarulMaxPRIGROUPValue();
 106:Core/Src/main.c ****   SEGGER_UART_init(1500000);
 107:Core/Src/main.c ****   SEGGER_SYSVIEW_Conf();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   status = xTaskCreate(task1, "task1", 200, NULL, 2, &task1_handler);
 110:Core/Src/main.c ****   configASSERT(status == pdPASS);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   status = xTaskCreate(task2, "task2", 200, NULL, 2, &task2_handler);
 113:Core/Src/main.c ****   configASSERT(status == pdPASS);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   vTaskStartScheduler();
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c **** 
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 4


 138:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 141:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 144:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 175:Core/Src/main.c **** static void task1(void *param)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   while (1) {
 179:Core/Src/main.c ****     if (++task1_count > 10)
 180:Core/Src/main.c ****       task1_count = 0;   
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     vTaskDelay(pdMS_TO_TICKS(500));
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** static void task2(void *param)
 186:Core/Src/main.c **** {
  32              		.loc 1 186 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 104
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              	.LVL0:
  37              		.loc 1 186 1 is_stmt 0 view .LVU1
  38 0000 00B5     		push	{lr}
  39              	.LCFI0:
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 5


  40              		.cfi_def_cfa_offset 4
  41              		.cfi_offset 14, -4
  42 0002 9BB0     		sub	sp, sp, #108
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 112
  45              	.LVL1:
  46              	.L2:
 187:Core/Src/main.c ****   char msg[100];
  47              		.loc 1 187 3 is_stmt 1 discriminator 1 view .LVU2
 188:Core/Src/main.c ****   uint8_t len;
  48              		.loc 1 188 3 discriminator 1 view .LVU3
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   while (1) {
  49              		.loc 1 190 3 discriminator 1 view .LVU4
 191:Core/Src/main.c ****     len = snprintf(msg, 100, "task1 count: %d\n", task1_count);
  50              		.loc 1 191 5 discriminator 1 view .LVU5
  51              		.loc 1 191 11 is_stmt 0 discriminator 1 view .LVU6
  52 0004 074B     		ldr	r3, .L4
  53 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0008 074A     		ldr	r2, .L4+4
  55 000a 6421     		movs	r1, #100
  56 000c 01A8     		add	r0, sp, #4
  57 000e FFF7FEFF 		bl	snprintf
  58              	.LVL2:
 192:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)msg, len);
  59              		.loc 1 192 5 is_stmt 1 discriminator 1 view .LVU7
  60 0012 C1B2     		uxtb	r1, r0
  61 0014 01A8     		add	r0, sp, #4
  62              	.LVL3:
  63              		.loc 1 192 5 is_stmt 0 discriminator 1 view .LVU8
  64 0016 FFF7FEFF 		bl	CDC_Transmit_FS
  65              	.LVL4:
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****     vTaskDelay(pdMS_TO_TICKS(500));
  66              		.loc 1 194 5 is_stmt 1 discriminator 1 view .LVU9
  67 001a FA20     		movs	r0, #250
  68 001c FFF7FEFF 		bl	vTaskDelay
  69              	.LVL5:
 190:Core/Src/main.c ****     len = snprintf(msg, 100, "task1 count: %d\n", task1_count);
  70              		.loc 1 190 9 discriminator 1 view .LVU10
  71 0020 F0E7     		b	.L2
  72              	.L5:
  73 0022 00BF     		.align	2
  74              	.L4:
  75 0024 00000000 		.word	.LANCHOR0
  76 0028 00000000 		.word	.LC0
  77              		.cfi_endproc
  78              	.LFE142:
  80              		.section	.text.task1,"ax",%progbits
  81              		.align	1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	task1:
  87              	.LFB141:
 176:Core/Src/main.c **** 
  88              		.loc 1 176 1 view -0
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 6


  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL6:
 176:Core/Src/main.c **** 
  94              		.loc 1 176 1 is_stmt 0 view .LVU12
  95 0000 08B5     		push	{r3, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
 100 0002 05E0     		b	.L8
 101              	.LVL7:
 102              	.L10:
 180:Core/Src/main.c **** 
 103              		.loc 1 180 7 is_stmt 1 view .LVU13
 180:Core/Src/main.c **** 
 104              		.loc 1 180 19 is_stmt 0 view .LVU14
 105 0004 1346     		mov	r3, r2
 106 0006 0022     		movs	r2, #0
 107 0008 1A70     		strb	r2, [r3]
 108              	.L7:
 182:Core/Src/main.c ****   }
 109              		.loc 1 182 5 is_stmt 1 view .LVU15
 110 000a FA20     		movs	r0, #250
 111 000c FFF7FEFF 		bl	vTaskDelay
 112              	.LVL8:
 178:Core/Src/main.c ****     if (++task1_count > 10)
 113              		.loc 1 178 9 view .LVU16
 114              	.L8:
 178:Core/Src/main.c ****     if (++task1_count > 10)
 115              		.loc 1 178 3 view .LVU17
 179:Core/Src/main.c ****       task1_count = 0;   
 116              		.loc 1 179 5 view .LVU18
 179:Core/Src/main.c ****       task1_count = 0;   
 117              		.loc 1 179 9 is_stmt 0 view .LVU19
 118 0010 034A     		ldr	r2, .L11
 119 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 120 0014 0133     		adds	r3, r3, #1
 121 0016 DBB2     		uxtb	r3, r3
 179:Core/Src/main.c ****       task1_count = 0;   
 122              		.loc 1 179 8 view .LVU20
 123 0018 1370     		strb	r3, [r2]
 124 001a 0A2B     		cmp	r3, #10
 125 001c F2D8     		bhi	.L10
 126 001e F4E7     		b	.L7
 127              	.L12:
 128              		.align	2
 129              	.L11:
 130 0020 00000000 		.word	.LANCHOR0
 131              		.cfi_endproc
 132              	.LFE141:
 134              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 135              		.align	1
 136              		.global	HAL_TIM_PeriodElapsedCallback
 137              		.syntax unified
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 7


 138              		.thumb
 139              		.thumb_func
 141              	HAL_TIM_PeriodElapsedCallback:
 142              	.LVL9:
 143              	.LFB143:
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /* USER CODE END 4 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 202:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 203:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 204:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 205:Core/Src/main.c ****   * @param  htim : TIM handle
 206:Core/Src/main.c ****   * @retval None
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 209:Core/Src/main.c **** {
 144              		.loc 1 209 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		.loc 1 209 1 is_stmt 0 view .LVU22
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 210:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 213:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 154              		.loc 1 213 3 is_stmt 1 view .LVU23
 155              		.loc 1 213 11 is_stmt 0 view .LVU24
 156 0002 0268     		ldr	r2, [r0]
 157              		.loc 1 213 6 view .LVU25
 158 0004 034B     		ldr	r3, .L17
 159 0006 9A42     		cmp	r2, r3
 160 0008 00D0     		beq	.L16
 161              	.LVL10:
 162              	.L13:
 214:Core/Src/main.c ****     HAL_IncTick();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 219:Core/Src/main.c **** }
 163              		.loc 1 219 1 view .LVU26
 164 000a 08BD     		pop	{r3, pc}
 165              	.LVL11:
 166              	.L16:
 214:Core/Src/main.c ****     HAL_IncTick();
 167              		.loc 1 214 5 is_stmt 1 view .LVU27
 168 000c FFF7FEFF 		bl	HAL_IncTick
 169              	.LVL12:
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 8


 170              		.loc 1 219 1 is_stmt 0 view .LVU28
 171 0010 FBE7     		b	.L13
 172              	.L18:
 173 0012 00BF     		.align	2
 174              	.L17:
 175 0014 00000140 		.word	1073807360
 176              		.cfi_endproc
 177              	.LFE143:
 179              		.section	.text.Error_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	Error_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	Error_Handler:
 187              	.LFB144:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void Error_Handler(void)
 226:Core/Src/main.c **** {
 188              		.loc 1 226 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ Volatile: function does not return.
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 227:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 228:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 229:Core/Src/main.c ****   __disable_irq();
 194              		.loc 1 229 3 view .LVU30
 195              	.LBB8:
 196              	.LBI8:
 197              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 9


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 10


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 11


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 198              		.loc 2 140 27 view .LVU31
 199              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 200              		.loc 2 142 3 view .LVU32
 201              		.syntax unified
 202              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0000 72B6     		cpsid i
 204              	@ 0 "" 2
 205              		.thumb
 206              		.syntax unified
 207              	.L20:
 208              	.LBE9:
 209              	.LBE8:
 230:Core/Src/main.c ****   while (1)
 210              		.loc 1 230 3 discriminator 1 view .LVU33
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****   }
 211              		.loc 1 232 3 discriminator 1 view .LVU34
 230:Core/Src/main.c ****   while (1)
 212              		.loc 1 230 9 discriminator 1 view .LVU35
 213 0002 FEE7     		b	.L20
 214              		.cfi_endproc
 215              	.LFE144:
 217              		.section	.text.SystemClock_Config,"ax",%progbits
 218              		.align	1
 219              		.global	SystemClock_Config
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	SystemClock_Config:
 225              	.LFB140:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 226              		.loc 1 134 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 80
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 00B5     		push	{lr}
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 14, -4
 234 0002 95B0     		sub	sp, sp, #84
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 88
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 237              		.loc 1 135 3 view .LVU37
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 238              		.loc 1 135 22 is_stmt 0 view .LVU38
 239 0004 3022     		movs	r2, #48
 240 0006 0021     		movs	r1, #0
 241 0008 08A8     		add	r0, sp, #32
 242 000a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 12


 243              	.LVL13:
 136:Core/Src/main.c **** 
 244              		.loc 1 136 3 is_stmt 1 view .LVU39
 136:Core/Src/main.c **** 
 245              		.loc 1 136 22 is_stmt 0 view .LVU40
 246 000e 0023     		movs	r3, #0
 247 0010 0393     		str	r3, [sp, #12]
 248 0012 0493     		str	r3, [sp, #16]
 249 0014 0593     		str	r3, [sp, #20]
 250 0016 0693     		str	r3, [sp, #24]
 251 0018 0793     		str	r3, [sp, #28]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 252              		.loc 1 140 3 is_stmt 1 view .LVU41
 253              	.LBB10:
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 254              		.loc 1 140 3 view .LVU42
 255 001a 0193     		str	r3, [sp, #4]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 256              		.loc 1 140 3 view .LVU43
 257 001c 214A     		ldr	r2, .L27
 258 001e 116C     		ldr	r1, [r2, #64]
 259 0020 41F08051 		orr	r1, r1, #268435456
 260 0024 1164     		str	r1, [r2, #64]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 261              		.loc 1 140 3 view .LVU44
 262 0026 126C     		ldr	r2, [r2, #64]
 263 0028 02F08052 		and	r2, r2, #268435456
 264 002c 0192     		str	r2, [sp, #4]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 265              		.loc 1 140 3 view .LVU45
 266 002e 019A     		ldr	r2, [sp, #4]
 267              	.LBE10:
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 268              		.loc 1 140 3 view .LVU46
 141:Core/Src/main.c **** 
 269              		.loc 1 141 3 view .LVU47
 270              	.LBB11:
 141:Core/Src/main.c **** 
 271              		.loc 1 141 3 view .LVU48
 272 0030 0293     		str	r3, [sp, #8]
 141:Core/Src/main.c **** 
 273              		.loc 1 141 3 view .LVU49
 274 0032 1D4A     		ldr	r2, .L27+4
 275 0034 1368     		ldr	r3, [r2]
 276 0036 23F44043 		bic	r3, r3, #49152
 277 003a 43F40043 		orr	r3, r3, #32768
 278 003e 1360     		str	r3, [r2]
 141:Core/Src/main.c **** 
 279              		.loc 1 141 3 view .LVU50
 280 0040 1368     		ldr	r3, [r2]
 281 0042 03F44043 		and	r3, r3, #49152
 282 0046 0293     		str	r3, [sp, #8]
 141:Core/Src/main.c **** 
 283              		.loc 1 141 3 view .LVU51
 284 0048 029B     		ldr	r3, [sp, #8]
 285              	.LBE11:
 141:Core/Src/main.c **** 
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 13


 286              		.loc 1 141 3 view .LVU52
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 287              		.loc 1 146 3 view .LVU53
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 288              		.loc 1 146 36 is_stmt 0 view .LVU54
 289 004a 0123     		movs	r3, #1
 290 004c 0893     		str	r3, [sp, #32]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 291              		.loc 1 147 3 is_stmt 1 view .LVU55
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 292              		.loc 1 147 30 is_stmt 0 view .LVU56
 293 004e 4FF48033 		mov	r3, #65536
 294 0052 0993     		str	r3, [sp, #36]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 295              		.loc 1 148 3 is_stmt 1 view .LVU57
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 296              		.loc 1 148 34 is_stmt 0 view .LVU58
 297 0054 0223     		movs	r3, #2
 298 0056 0E93     		str	r3, [sp, #56]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 299              		.loc 1 149 3 is_stmt 1 view .LVU59
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 300              		.loc 1 149 35 is_stmt 0 view .LVU60
 301 0058 4FF48003 		mov	r3, #4194304
 302 005c 0F93     		str	r3, [sp, #60]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 303              		.loc 1 150 3 is_stmt 1 view .LVU61
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 304              		.loc 1 150 30 is_stmt 0 view .LVU62
 305 005e 1923     		movs	r3, #25
 306 0060 1093     		str	r3, [sp, #64]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 307              		.loc 1 151 3 is_stmt 1 view .LVU63
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 308              		.loc 1 151 30 is_stmt 0 view .LVU64
 309 0062 4FF4A873 		mov	r3, #336
 310 0066 1193     		str	r3, [sp, #68]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 311              		.loc 1 152 3 is_stmt 1 view .LVU65
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 312              		.loc 1 152 30 is_stmt 0 view .LVU66
 313 0068 0423     		movs	r3, #4
 314 006a 1293     		str	r3, [sp, #72]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 315              		.loc 1 153 3 is_stmt 1 view .LVU67
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 316              		.loc 1 153 30 is_stmt 0 view .LVU68
 317 006c 0723     		movs	r3, #7
 318 006e 1393     		str	r3, [sp, #76]
 154:Core/Src/main.c ****   {
 319              		.loc 1 154 3 is_stmt 1 view .LVU69
 154:Core/Src/main.c ****   {
 320              		.loc 1 154 7 is_stmt 0 view .LVU70
 321 0070 08A8     		add	r0, sp, #32
 322 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 323              	.LVL14:
 154:Core/Src/main.c ****   {
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 14


 324              		.loc 1 154 6 view .LVU71
 325 0076 80B9     		cbnz	r0, .L25
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 326              		.loc 1 161 3 is_stmt 1 view .LVU72
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 327              		.loc 1 161 31 is_stmt 0 view .LVU73
 328 0078 0F23     		movs	r3, #15
 329 007a 0393     		str	r3, [sp, #12]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 330              		.loc 1 163 3 is_stmt 1 view .LVU74
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 331              		.loc 1 163 34 is_stmt 0 view .LVU75
 332 007c 0221     		movs	r1, #2
 333 007e 0491     		str	r1, [sp, #16]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 334              		.loc 1 164 3 is_stmt 1 view .LVU76
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 335              		.loc 1 164 35 is_stmt 0 view .LVU77
 336 0080 0023     		movs	r3, #0
 337 0082 0593     		str	r3, [sp, #20]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 338              		.loc 1 165 3 is_stmt 1 view .LVU78
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 339              		.loc 1 165 36 is_stmt 0 view .LVU79
 340 0084 4FF48052 		mov	r2, #4096
 341 0088 0692     		str	r2, [sp, #24]
 166:Core/Src/main.c **** 
 342              		.loc 1 166 3 is_stmt 1 view .LVU80
 166:Core/Src/main.c **** 
 343              		.loc 1 166 36 is_stmt 0 view .LVU81
 344 008a 0793     		str	r3, [sp, #28]
 168:Core/Src/main.c ****   {
 345              		.loc 1 168 3 is_stmt 1 view .LVU82
 168:Core/Src/main.c ****   {
 346              		.loc 1 168 7 is_stmt 0 view .LVU83
 347 008c 03A8     		add	r0, sp, #12
 348 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 349              	.LVL15:
 168:Core/Src/main.c ****   {
 350              		.loc 1 168 6 view .LVU84
 351 0092 20B9     		cbnz	r0, .L26
 172:Core/Src/main.c **** 
 352              		.loc 1 172 1 view .LVU85
 353 0094 15B0     		add	sp, sp, #84
 354              	.LCFI6:
 355              		.cfi_remember_state
 356              		.cfi_def_cfa_offset 4
 357              		@ sp needed
 358 0096 5DF804FB 		ldr	pc, [sp], #4
 359              	.L25:
 360              	.LCFI7:
 361              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 362              		.loc 1 156 5 is_stmt 1 view .LVU86
 363 009a FFF7FEFF 		bl	Error_Handler
 364              	.LVL16:
 365              	.L26:
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 15


 170:Core/Src/main.c ****   }
 366              		.loc 1 170 5 view .LVU87
 367 009e FFF7FEFF 		bl	Error_Handler
 368              	.LVL17:
 369              	.L28:
 370 00a2 00BF     		.align	2
 371              	.L27:
 372 00a4 00380240 		.word	1073887232
 373 00a8 00700040 		.word	1073770496
 374              		.cfi_endproc
 375              	.LFE140:
 377              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 378              		.align	2
 379              	.LC1:
 380 0000 7461736B 		.ascii	"task1\000"
 380      3100
 381 0006 0000     		.align	2
 382              	.LC2:
 383 0008 7461736B 		.ascii	"task2\000"
 383      3200
 384              		.section	.text.main,"ax",%progbits
 385              		.align	1
 386              		.global	main
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	main:
 392              	.LFB139:
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 393              		.loc 1 75 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 10B5     		push	{r4, lr}
 398              	.LCFI8:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 402 0002 82B0     		sub	sp, sp, #8
 403              	.LCFI9:
 404              		.cfi_def_cfa_offset 16
  77:Core/Src/main.c ****   /* USER CODE END 1 */
 405              		.loc 1 77 3 view .LVU89
  83:Core/Src/main.c **** 
 406              		.loc 1 83 3 view .LVU90
 407 0004 FFF7FEFF 		bl	HAL_Init
 408              	.LVL18:
  90:Core/Src/main.c **** 
 409              		.loc 1 90 3 view .LVU91
 410 0008 FFF7FEFF 		bl	SystemClock_Config
 411              	.LVL19:
  97:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 412              		.loc 1 97 3 view .LVU92
 413 000c FFF7FEFF 		bl	MX_GPIO_Init
 414              	.LVL20:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 415              		.loc 1 98 3 view .LVU93
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 16


 416 0010 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 417              	.LVL21:
 100:Core/Src/main.c ****   HAL_Delay(100);
 418              		.loc 1 100 3 view .LVU94
 419 0014 FFF7FEFF 		bl	DWT_Init
 420              	.LVL22:
 101:Core/Src/main.c **** 
 421              		.loc 1 101 3 view .LVU95
 422 0018 6420     		movs	r0, #100
 423 001a FFF7FEFF 		bl	HAL_Delay
 424              	.LVL23:
 103:Core/Src/main.c **** 
 425              		.loc 1 103 3 view .LVU96
 103:Core/Src/main.c **** 
 426              		.loc 1 103 15 is_stmt 0 view .LVU97
 427 001e 0024     		movs	r4, #0
 428 0020 1A4B     		ldr	r3, .L36
 429 0022 1C70     		strb	r4, [r3]
 105:Core/Src/main.c ****   SEGGER_UART_init(1500000);
 430              		.loc 1 105 3 is_stmt 1 view .LVU98
 431 0024 FFF7FEFF 		bl	vSetVarulMaxPRIGROUPValue
 432              	.LVL24:
 106:Core/Src/main.c ****   SEGGER_SYSVIEW_Conf();
 433              		.loc 1 106 3 view .LVU99
 434 0028 1948     		ldr	r0, .L36+4
 435 002a FFF7FEFF 		bl	SEGGER_UART_init
 436              	.LVL25:
 107:Core/Src/main.c **** 
 437              		.loc 1 107 3 view .LVU100
 438 002e FFF7FEFF 		bl	SEGGER_SYSVIEW_Conf
 439              	.LVL26:
 109:Core/Src/main.c ****   configASSERT(status == pdPASS);
 440              		.loc 1 109 3 view .LVU101
 109:Core/Src/main.c ****   configASSERT(status == pdPASS);
 441              		.loc 1 109 12 is_stmt 0 view .LVU102
 442 0032 184B     		ldr	r3, .L36+8
 443 0034 0193     		str	r3, [sp, #4]
 444 0036 0223     		movs	r3, #2
 445 0038 0093     		str	r3, [sp]
 446 003a 2346     		mov	r3, r4
 447 003c C822     		movs	r2, #200
 448 003e 1649     		ldr	r1, .L36+12
 449 0040 1648     		ldr	r0, .L36+16
 450 0042 FFF7FEFF 		bl	xTaskCreate
 451              	.LVL27:
 110:Core/Src/main.c **** 
 452              		.loc 1 110 3 is_stmt 1 view .LVU103
 453 0046 0128     		cmp	r0, #1
 454 0048 08D0     		beq	.L30
 110:Core/Src/main.c **** 
 455              		.loc 1 110 3 view .LVU104
 456              	.LBB12:
 457              	.LBI12:
 458              		.file 3 "FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.4.3
   3:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 17


   4:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  23:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  24:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  31:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  33:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  34:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  35:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  48:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  49:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  50:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  51:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  52:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  54:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  57:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 18


  61:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  63:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  64:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  68:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  70:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  78:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  79:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  80:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  81:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  82:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  85:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  90:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  91:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired ) { if( xSwitchRequired != pdFALSE ) { traceISR_
  94:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  96:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  98:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
  99:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 100:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 107:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 108:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 109:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 112:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 116:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 117:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 19


 118:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 121:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 122:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 123:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 124:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 127:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 128:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 130:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 131:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 133:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 134:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 135:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 137:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 138:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 139:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 140:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 141:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 144:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 145:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 150:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 158:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 161:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 162:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 163:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 164:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 166:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 167:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 168:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 170:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 173:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 20


 175:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 179:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 181:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 182:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 183:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 184:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 185:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 186:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 187:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 188:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 189:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 190:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 192:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 459              		.loc 3 193 34 view .LVU105
 460              	.LBB13:
 194:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 195:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 461              		.loc 3 195 9 view .LVU106
 196:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 462              		.loc 3 197 9 view .LVU107
 463              		.syntax unified
 464              	@ 197 "FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 465 004a 4FF05003 			mov r3, #80												
 466 004e 83F31188 		msr basepri, r3											
 467 0052 BFF36F8F 		isb														
 468 0056 BFF34F8F 		dsb														
 469              	
 470              	@ 0 "" 2
 471              	.LVL28:
 472              		.thumb
 473              		.syntax unified
 474              	.L31:
 475              		.loc 3 197 9 is_stmt 0 view .LVU108
 476              	.LBE13:
 477              	.LBE12:
 110:Core/Src/main.c **** 
 478              		.loc 1 110 3 is_stmt 1 discriminator 1 view .LVU109
 110:Core/Src/main.c **** 
 479              		.loc 1 110 3 discriminator 1 view .LVU110
 110:Core/Src/main.c **** 
 480              		.loc 1 110 3 discriminator 1 view .LVU111
 481 005a FEE7     		b	.L31
 482              	.L30:
 110:Core/Src/main.c **** 
 483              		.loc 1 110 33 discriminator 2 view .LVU112
 112:Core/Src/main.c ****   configASSERT(status == pdPASS);
 484              		.loc 1 112 3 discriminator 2 view .LVU113
 112:Core/Src/main.c ****   configASSERT(status == pdPASS);
 485              		.loc 1 112 12 is_stmt 0 discriminator 2 view .LVU114
 486 005c 104B     		ldr	r3, .L36+20
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 21


 487 005e 0193     		str	r3, [sp, #4]
 488 0060 0223     		movs	r3, #2
 489 0062 0093     		str	r3, [sp]
 490 0064 0023     		movs	r3, #0
 491 0066 C822     		movs	r2, #200
 492 0068 0E49     		ldr	r1, .L36+24
 493 006a 0F48     		ldr	r0, .L36+28
 494              	.LVL29:
 112:Core/Src/main.c ****   configASSERT(status == pdPASS);
 495              		.loc 1 112 12 discriminator 2 view .LVU115
 496 006c FFF7FEFF 		bl	xTaskCreate
 497              	.LVL30:
 113:Core/Src/main.c **** 
 498              		.loc 1 113 3 is_stmt 1 discriminator 2 view .LVU116
 499 0070 0128     		cmp	r0, #1
 500 0072 08D0     		beq	.L32
 113:Core/Src/main.c **** 
 501              		.loc 1 113 3 view .LVU117
 502              	.LBB14:
 503              	.LBI14:
 193:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 504              		.loc 3 193 34 view .LVU118
 505              	.LBB15:
 195:FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 506              		.loc 3 195 9 view .LVU119
 507              		.loc 3 197 9 view .LVU120
 508              		.syntax unified
 509              	@ 197 "FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 510 0074 4FF05003 			mov r3, #80												
 511 0078 83F31188 		msr basepri, r3											
 512 007c BFF36F8F 		isb														
 513 0080 BFF34F8F 		dsb														
 514              	
 515              	@ 0 "" 2
 516              	.LVL31:
 517              		.thumb
 518              		.syntax unified
 519              	.L33:
 520              		.loc 3 197 9 is_stmt 0 view .LVU121
 521              	.LBE15:
 522              	.LBE14:
 113:Core/Src/main.c **** 
 523              		.loc 1 113 3 is_stmt 1 discriminator 2 view .LVU122
 113:Core/Src/main.c **** 
 524              		.loc 1 113 3 discriminator 2 view .LVU123
 113:Core/Src/main.c **** 
 525              		.loc 1 113 3 discriminator 2 view .LVU124
 526 0084 FEE7     		b	.L33
 527              	.L32:
 113:Core/Src/main.c **** 
 528              		.loc 1 113 33 discriminator 2 view .LVU125
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 529              		.loc 1 115 3 discriminator 2 view .LVU126
 530 0086 FFF7FEFF 		bl	vTaskStartScheduler
 531              	.LVL32:
 532              	.L34:
 120:Core/Src/main.c ****   {
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 22


 533              		.loc 1 120 3 discriminator 3 view .LVU127
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 534              		.loc 1 125 3 discriminator 3 view .LVU128
 120:Core/Src/main.c ****   {
 535              		.loc 1 120 9 discriminator 3 view .LVU129
 536 008a FEE7     		b	.L34
 537              	.L37:
 538              		.align	2
 539              	.L36:
 540 008c 00000000 		.word	.LANCHOR0
 541 0090 60E31600 		.word	1500000
 542 0094 00000000 		.word	.LANCHOR1
 543 0098 00000000 		.word	.LC1
 544 009c 00000000 		.word	task1
 545 00a0 00000000 		.word	.LANCHOR2
 546 00a4 08000000 		.word	.LC2
 547 00a8 00000000 		.word	task2
 548              		.cfi_endproc
 549              	.LFE139:
 551              		.global	task1_count
 552              		.global	task2_handler
 553              		.global	task1_handler
 554              		.section	.bss.task1_count,"aw",%nobits
 555              		.set	.LANCHOR0,. + 0
 558              	task1_count:
 559 0000 00       		.space	1
 560              		.section	.bss.task1_handler,"aw",%nobits
 561              		.align	2
 562              		.set	.LANCHOR1,. + 0
 565              	task1_handler:
 566 0000 00000000 		.space	4
 567              		.section	.bss.task2_handler,"aw",%nobits
 568              		.align	2
 569              		.set	.LANCHOR2,. + 0
 572              	task2_handler:
 573 0000 00000000 		.space	4
 574              		.text
 575              	.Letext0:
 576              		.file 4 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 577              		.file 5 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 578              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 579              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 580              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 581              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 582              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 583              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 584              		.file 12 "FreeRTOS/include/task.h"
 585              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 586              		.file 14 "d:\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\stdio.h"
 587              		.file 15 "USB_DEVICE/App/usbd_cdc_if.h"
 588              		.file 16 "Core/Inc/gpio.h"
 589              		.file 17 "USB_DEVICE/App/usb_device.h"
 590              		.file 18 "Core/Inc/dwt_delay.h"
 591              		.file 19 "SEGGER/Config/SEGGER_SYSVIEW_Conf.h"
 592              		.file 20 "SEGGER/SEGGER/SEGGER_SYSVIEW.h"
 593              		.file 21 "<built-in>"
ARM GAS  C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:20     .rodata.task2.str1.4:00000000 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:24     .text.task2:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:29     .text.task2:00000000 task2
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:75     .text.task2:00000024 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:81     .text.task1:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:86     .text.task1:00000000 task1
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:130    .text.task1:00000020 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:135    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:141    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:175    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:180    .text.Error_Handler:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:186    .text.Error_Handler:00000000 Error_Handler
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:218    .text.SystemClock_Config:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:224    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:372    .text.SystemClock_Config:000000a4 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:378    .rodata.main.str1.4:00000000 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:385    .text.main:00000000 $t
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:391    .text.main:00000000 main
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:540    .text.main:0000008c $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:558    .bss.task1_count:00000000 task1_count
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:572    .bss.task2_handler:00000000 task2_handler
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:565    .bss.task1_handler:00000000 task1_handler
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:559    .bss.task1_count:00000000 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:561    .bss.task1_handler:00000000 $d
C:\Users\LINZHE~1\AppData\Local\Temp\ccqRWdb0.s:568    .bss.task2_handler:00000000 $d

UNDEFINED SYMBOLS
snprintf
CDC_Transmit_FS
vTaskDelay
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USB_DEVICE_Init
DWT_Init
HAL_Delay
vSetVarulMaxPRIGROUPValue
SEGGER_UART_init
SEGGER_SYSVIEW_Conf
xTaskCreate
vTaskStartScheduler
